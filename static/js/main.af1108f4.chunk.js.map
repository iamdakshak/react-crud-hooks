{"version":3,"sources":["forms/AddUserForm.jsx","forms/EditUserForm.jsx","hooks/useAsyncRequest.js","tables/UserTable.jsx","App-async.js","index.js"],"names":["AddUserForm","props","useState","id","name","username","user","setUser","handleChange","e","target","value","className","type","onChange","onClick","preventDefault","addUser","EditUserForm","currentUser","useEffect","updateUser","setEditing","useAsyncRequest","amount","data","setData","loading","setLoading","a","fetch","response","json","results","console","log","fetchData","UserTable","users","length","map","deleteUser","editUser","colSpan","App","setUsers","formattedUsers","obj","i","first","last","editing","setCurrentUser","newUser","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af1108f4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddUserForm = (props) => {\r\n    const initUser = {id: null, name: '', username: ''}\r\n    const [user, setUser] = useState(initUser);\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setUser({...user, [name]: value});\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(user.name && user.username){\r\n            handleChange(e, props.addUser(user));\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <label>Name</label>\r\n            <input className=\"u-full-width\" type=\"text\" value={user.name} name=\"name\" onChange={handleChange} />\r\n            <label>Username</label>\r\n            <input className=\"u-full-width\" type=\"text\" value={user.username} name=\"username\" onChange={handleChange} />\r\n            <button className=\"button-primary\" type=\"submit\" onClick={handleSubmit}>Add User</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddUserForm;","import React, { useState, useEffect } from 'react';\r\n\r\nconst EditUserForm = (props) => {\r\n    const [user, setUser] = useState(props.currentUser);\r\n\r\n    useEffect(() => {\r\n        setUser(props.currentUser)\r\n    }, [props])\r\n\r\n    const handleChange = e => {\r\n        const {name, value} = e.target;\r\n        setUser({...user, [name]: value});\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(user.name && user.username){\r\n            props.updateUser(user);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <label>Name</label>\r\n            <input className=\"u-full-width\" type=\"text\" value={user.name} name=\"name\" onChange={handleChange}/>\r\n            <label>Username</label>\r\n            <input className=\"u-full-width\" type=\"text\" value={user.username} name=\"username\" onChange={handleChange} />\r\n            <button className=\"button-primary\" type=\"submit\" onClick={handleSubmit}>Edit User</button>\r\n            <button type=\"submit\" onClick={() => props.setEditing(false)} >Cancel</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditUserForm;","import { useState, useEffect } from 'react';\r\n\r\nconst useAsyncRequest = amount => {\r\n    const [data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try{\r\n                setLoading(true);\r\n                const response = await fetch(`https://randomuser.me/api/?results=${amount}`);\r\n                const json = await response.json();\r\n                setData(json.results, setLoading(false));\r\n            } catch(err) {\r\n                console.log(\"Something went wrong fetching the API!\", err);\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        if(amount){\r\n            fetchData(amount);\r\n        }\r\n    }, [amount]);\r\n    return [data, loading]\r\n}\r\n\r\nexport default useAsyncRequest;","import React from 'react';\r\n\r\nconst UserTable = (props) => {\r\n    return(\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Username</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                { props.users.length > 0 ? (\r\n                    props.users.map(user => {\r\n                        const {id, name, username} = user;\r\n                        return(\r\n                            <tr>\r\n                                <td>{id}</td>\r\n                                <td>{name}</td>\r\n                                <td>{username}</td>\r\n                                <td>\r\n                                    <button onClick={() => props.deleteUser(id)}>Delete</button>\r\n                                    <button onClick={() => props.editUser(id, user)} >Edit</button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                ) : (\r\n                    <tr>\r\n                        <td colSpan={4}>No users found!</td>\r\n                    </tr>\r\n                ) }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default UserTable;","import React, { useEffect, useState } from 'react';\r\nimport AddUserForm from './forms/AddUserForm';\r\nimport EditUserForm from './forms/EditUserForm';\r\nimport useAsyncRequest from './hooks/useAsyncRequest';\r\nimport UserTable from './tables/UserTable';\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [data, loading] = useAsyncRequest(3);\r\n  const [users, setUsers] = useState(null);\r\n\r\n  useEffect(() => {\r\n      if(data){\r\n          const formattedUsers = data.map((obj, i) => {\r\n              return {\r\n                  id: i,\r\n                  name: obj.name.first,\r\n                  username: obj.name.first + \" \" + obj.name.last,\r\n              };\r\n          });\r\n          setUsers(formattedUsers);\r\n      }\r\n  }, [data])\r\n\r\n  const addUser = user => {\r\n    user.id = users.length + 1;\r\n    setUsers([...users, user]);\r\n  }\r\n\r\n  const deleteUser = id => setUsers(users.filter(user => user.id !== id));\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const initialUser = {id: null, name: '', username: ''};\r\n  const [currentUser, setCurrentUser] = useState(initialUser);\r\n\r\n  const editUser = (id, user) => {\r\n    setEditing(true);\r\n    setCurrentUser(user);\r\n  }\r\n\r\n  const updateUser = (newUser) => {\r\n    setUsers(users.map(user => (user.id === currentUser.id ? newUser : user)))\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>React CRUD App with Hooks</h1>\r\n      <div className=\"row\">\r\n        <div className=\"five columns\">\r\n          { editing ? (\r\n            <div>\r\n              <h2>Edit User</h2>\r\n              <EditUserForm currentUser={currentUser}\r\n                            setEditing={setEditing}\r\n                            updateUser={updateUser} />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2>Add User</h2>\r\n              <AddUserForm addUser={addUser} />\r\n            </div>\r\n          ) }\r\n        </div>\r\n        { loading || !users ? (\r\n            <p>Loading...</p>\r\n        ) : (\r\n            <div className=\"seven columns\">\r\n                <h2>View User</h2>\r\n                <UserTable users={users} deleteUser={deleteUser} editUser={editUser} />\r\n            </div>\r\n        ) }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App-async';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}